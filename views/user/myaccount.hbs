
    <div class="page-wrapper">
{{>allPageHeader}}
        <main class="main">
        	<div class="page-header text-center" style="background-image: url('assets/images/page-header-bg.jpg')">
        		<div class="container">
        			<h1 class="page-title">My Account<span>Shop</span></h1>
        		</div><!-- End .container -->
        	</div><!-- End .page-header -->
            <nav aria-label="breadcrumb" class="breadcrumb-nav mb-3">
                <div class="container">
                    <ol class="breadcrumb">
                        <li class="breadcrumb-item"><a href="index.html">Home</a></li>
                        <li class="breadcrumb-item"><a href="#">Shop</a></li>
                        <li class="breadcrumb-item active" aria-current="page">My Account</li>
                    </ol>
                </div><!-- End .container -->
            </nav><!-- End .breadcrumb-nav -->

            <div class="page-content">
            	<div class="dashboard">
	                <div class="container">
	                	<div class="row">
	                		<aside class="col-md-3 col-lg-2">
	                			<ul class="nav nav-dashboard flex-column mb-3 mb-md-0" role="tablist">
								    <li class="nav-item">
								        <a class="nav-link " id="tab-dashboard-link" data-toggle="tab" href="#tab-dashboard" role="tab" aria-controls="tab-dashboard" aria-selected="false">wallet</a>
								    </li>
								    <li class="nav-item">
								        <a class="nav-link active" id="tab-orders-link" data-toggle="tab" href="#tab-orders" role="tab" aria-controls="tab-orders" aria-selected="true">Orders</a>
								    </li>
								    {{!-- <li class="nav-item">
								        <a class="nav-link" id="tab-downloads-link" data-toggle="tab" href="#tab-downloads" role="tab" aria-controls="tab-downloads" aria-selected="false">Downloads</a>
								    </li> --}}
								    <li class="nav-item">
								        <a class="nav-link" id="tab-address-link" data-toggle="tab" href="#tab-address" role="tab" aria-controls="tab-address" aria-selected="false">Adresses</a>
								    </li>
								    <li class="nav-item">
								        <a class="nav-link" id="tab-account-link" data-toggle="tab" href="#tab-account" role="tab" aria-controls="tab-account" aria-selected="false">Account Details</a>
								    </li>
								    <li class="nav-item">
								        <a class="nav-link" href="/logout">Sign Out</a>
								    </li>
								</ul>
	                		</aside><!-- End .col-lg-3 -->

	                		<div class="col-md-9 col-lg-10">
	                			<div class="tab-content">
								    {{!-- <div class="tab-pane fade " id="tab-dashboard" role="tabpanel" aria-labelledby="tab-dashboard-link">
								    	<p>Hello <span class="font-weight-normal text-dark">User</span> (not <span class="font-weight-normal text-dark">User</span>? <a href="#">Log out</a>) 
								    	<br>
								    	From your account dashboard you can view your <a href="#tab-orders" class="tab-trigger-link link-underline">recent orders</a>, manage your <a href="#tab-address" class="tab-trigger-link">shipping and billing addresses</a>, and <a href="#tab-account" class="tab-trigger-link">edit your password and account details</a>.</p>
								    </div><!-- .End .tab-pane --> --}}
 <div class="tab-pane fade" id="tab-dashboard" role="tabpanel" aria-labelledby="tab-dashboard-link">
  <div class="card card-dashboard">
    <div class="card-body">
      <h3 class="card-title">My Wallet</h3>
      
      <div class="wallet-card mb-4" style="background: linear-gradient(45deg, #d4b62f, #2a7098); border-radius: 15px; padding: 30px; box-shadow: 0 10px 20px rgba(0,0,0,0.19), 0 6px 6px rgba(0,0,0,0.23); color: white;">
        <div class="row">
          <div class="col-12 mb-4">
            <i class="fas fa-coins" style="font-size: 50px;"></i>
          </div>
          <div class="col-12 mb-4">
            <h4 style="font-size: 1.2em; margin-bottom: 5px;">Current Balance</h4>
            <p style="font-size: 2.5em; font-weight: bold; margin-bottom: 0;">{{#if user.wallet}} ₹{{user.wallet}}.00 {{else}}₹00.00 {{/if}} </p>
          </div>
          <div class="col-12">
            <p style="font-size: 1em; margin-bottom: 5px;">Wallet Holder</p>
            <h5 style="font-size: 1.2em; text-transform: uppercase;"> {{user.name}} </h5>
          </div>
        </div>
      </div>

      <div class="wallet-info" style="background-color: #f9f9f9; border: 1px solid #ebebeb; border-radius: 8px; padding: 20px;">
        <h4 style="font-size: 1.1em; color: #333; margin-bottom: 15px;">Wallet Details</h4>
        <p style="font-size: 0.9em; color: #666; margin-bottom: 0;"><strong>Status:</strong> Active</p>
      </div>
    </div>
  </div>
</div>

<div class="tab-pane fade show active" id="tab-orders" role="tabpanel" aria-labelledby="tab-orders-link">
  <div class="card card-dashboard">
    <div class="card-body">
      <h3 class="card-title">Orders</h3>

<div class="order-list">
  {{#each orders}}
    <div class="order-item mb-3 p-3" style="border: 1px solid #ebebeb; border-radius: 8px; background-color: #f9f9f9; box-shadow: 0 2px 5px rgba(0, 0, 0, 0.05);">
      <div class="row align-items-center">
        {{#each this.items}}
          <!-- Product image and name -->
          <div class="col-12 col-md-3 mb-2 mb-md-0 d-flex align-items-center">
            <img src="uploads/{{product.image.[0]}}" alt="{{this.product.name}}" style="max-width: 50px; height: 50px; border-radius: 5px; object-fit: cover; margin-right: 10px;">
            <div>
              <h5 style="font-size: 0.9em; color: #3a3838; font-weight: bold; margin-bottom: 0;">{{this.product.name}} <mark> × {{this.quantity}} </mark> <small>(qty)</small> </h5>
              <p style="color: #4a4a4a; font-size: 0.8em; margin-bottom: 0;">₹{{this.price}}</p>
            </div>
          </div>

          <!-- Order details -->
          <div class="col-12 col-md-7 mb-2 mb-md-0">
            <div class="row">
              <div class="col-6 col-md-4">
                <p style="font-size: 0.8em; color: #666; margin-bottom: 0;"><strong>Purchased:</strong> {{date ../datePlaced "MMM Do, YYYY"}}</p>
              </div>
              <div class="col-6 col-md-4">
                <p style="font-size: 0.8em; color: #666; margin-bottom: 0;"><strong>Delivery by:</strong> {{date ../deliveryExpectedDate "MMM Do, YYYY"}}</p>
              </div>
              <div class="col-6 col-md-4">
                <p style="font-size: 0.8em; color: #666; margin-bottom: 0;"><strong>Status:</strong> {{../orderStatus}}</p>
              </div>
            </div>
          </div>

          <!-- Cancel or Return button -->
          <div class="col-12 col-md-2 text-right">
            {{#if (or (eq ../orderStatus "Processing") (eq ../orderStatus "Shipped"))}}
              {{#if @first}}
                <!-- Show 'Cancel' button if the order is still processing or shipped -->
                <button class="btn btn-outline-danger btn-sm" style="width: 80px; height: 30px; padding: 0; display: inline-flex; justify-content: center; align-items: center; border-radius: 4px;"
                  onclick="cancelOrder('{{../_id}}')">
                  Cancel
                </button>
              {{/if}}
            {{else if (eq ../orderStatus "Delivered")}}
              <!-- If the order is delivered -->
              {{#if this.return}}
                <!-- If a return is requested, show the current return status -->
                <button class="btn btn-outline-success btn-sm" style="width: 120px; height: 30px; padding: 0; display: inline-flex; justify-content: center; align-items: center; border-radius: 4px;" disabled>
                  {{#if (eq this.returnStatus "Approved")}}
                    Refund Completed
                  {{else}}
                    Refund {{this.returnStatus}}
                  {{/if}}
                </button>
              {{else}}
                <!-- If no return requested, show the 'Return' button -->
                <button class="btn btn-outline-primary-2 btn-sm" style="width: 80px; height: 30px; padding: 0; display: inline-flex; justify-content: center; align-items: center; border-radius: 4px;"
                  onclick="openReturnModal('{{../_id}}', '{{this.product._id}}', '{{this.return}}')">
                  Return
                </button>
              {{/if}}
            {{/if}}

            <!-- Cancelled or Refund Completed based on payment type using a single warning button -->
            {{#if (or (eq ../orderStatus "Cancelled") (eq ../orderStatus "Refund Completed"))}}
             {{#if @first}}
              <button class="btn btn-outline-danger btn-sm" style="width: 140px; height: 30px; padding: 0; display: inline-flex; justify-content: center; align-items: center; border-radius: 4px;" disabled>
                {{#if (eq ../paymentType "Stripe Payment")}}
                  Cancelled&Refunded
                {{else if (eq ../paymentType "Cash on Delivery")}}
                  Cancell successfull
                {{/if}}
              </button>
              {{/if}}
            {{/if}}

          </div>
        {{/each}}
      </div>
    </div>
  {{/each}}
</div>


      <!-- Go shop button -->
      <a href="/shop" class="btn btn-outline-primary-2 mt-3" style="border-radius: 0; padding: 10px 15px;">
        <span>GO SHOP</span>
        <i class="icon-long-arrow-right"></i>
      </a>
    </div>
  </div>
</div>


<!-- Return Modal -->
<div class="modal fade" id="returnModal" tabindex="-1" role="dialog" aria-labelledby="returnModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered" role="document">
    <div class="modal-content" style="border-radius: 10px; padding: 15px; box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);">
      <div class="modal-header" style="border-bottom: 2px solid #ddd;">
        <h5 class="modal-title" id="returnModalLabel">Return Product</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
        <form id="returnForm">
          <!-- Hidden Inputs for orderId and productId -->
          <input type="hidden" id="orderId">
          <input type="hidden" id="productId">

          <!-- Dropdown for return reasons -->
          <div class="form-group">
            <label for="returnReason">Reason for Return</label>
            <select class="form-control" id="returnReason" required style="border-radius: 5px;">
              <option value="" disabled selected>Select a reason</option>
              <option value="Damaged">Product damaged</option>
              <option value="Defective">Product defective</option>
              <option value="Incorrect">Incorrect product received</option>
              <option value="Others">Other reasons</option>
            </select>
          </div>
          <p style="font-size: 0.85em; color: #0ea613;"><strong>The refund amount will be credited to your wallet.</strong></p>
        </form>
      </div>
      <div class="modal-footer" style="border-top: 2px solid #ddd;">
        <button type="button" class="btn btn-secondary" data-dismiss="modal" style="border-radius: 5px;">Cancel</button>
        <button type="button" class="btn btn-danger" id="confirmReturnBtn" style="border-radius: 5px;">Confirm Return</button>
      </div>
    </div>
  </div>
</div>



								    {{!-- <div class="tab-pane fade" id="tab-downloads" role="tabpanel" aria-labelledby="tab-downloads-link">
								    	<p>No downloads available yet.</p>
								    	<a href="category.html" class="btn btn-outline-primary-2"><span>GO SHOP</span><i class="icon-long-arrow-right"></i></a>
								    </div><!-- .End .tab-pane --> --}}

								    <div class="tab-pane fade" id="tab-address" role="tabpanel" aria-labelledby="tab-address-link">
								    	<p>The following addresses will be used on the checkout page by default.</p>

								    	<div class="row">
								    		<div class="col-lg-12">
								    			<div class="card card-dashboard">
								    				<div class="card-body">
								    					<h3 class="card-title">Billing Addresses</h3><!-- End .card-title -->
														<div style="border: 1px solid #ebebeb; border-radius: 8px; background-color: #f9f9f9; box-shadow: 0 2px 5px rgba(0,0,0,0.05);"></div>															
															{{#each address}}
														<p>{{this.firstName}} 
														{{this.lastName}} <br>
														{{this.streetAddress}}
														{{this.country}}<br>
														{{this.phone}}
														{{this.email}}<br>
														<div style="border: 1px solid #ebebeb; border-radius: 8px; background-color: #f9f9f9; box-shadow: 0 2px 5px rgba(0,0,0,0.05);"></div>
														</p>
														{{/each}}
								    				</div><!-- End .card-body -->
								    			</div><!-- End .card-dashboard -->
								    		</div><!-- End .col-lg-6 -->

								    	</div><!-- End .row -->
								    </div><!-- .End .tab-pane -->

								    <div class="tab-pane fade" id="tab-account" role="tabpanel" aria-labelledby="tab-account-link">
								    	<form action="#">
			                				{{!-- <div class="row">
			                					<div class="col-sm-6">
			                						<label>First Name *</label>
			                						<input type="text" class="form-control" required>
			                					</div><!-- End .col-sm-6 -->

			                					<div class="col-sm-6">
			                						<label>Last Name *</label>
			                						<input type="text" class="form-control" required>
			                					</div><!-- End .col-sm-6 -->
			                				</div><!-- End .row --> --}}

		            						<label>Display Name *</label>
		            						<input type="text" class="form-control" readonly value="{{user.name}}">
		            						<small class="form-text">This will be how your name will be displayed in the account section and in reviews</small>

		                					<label>Email address *</label>
		        							<input type="email" class="form-control" readonly value="{{user.email}}">

		            						<label>Current password </label>
		            						<input type="password" class="form-control" readonly value="{{user.password}}">

		            						{{!-- <label>New password (leave blank to leave unchanged)</label>
		            						<input type="password" class="form-control">

		            						<label>Confirm new password</label>
		            						<input type="password" class="form-control mb-2"> --}}

		                					<button type="submit" class="btn btn-outline-primary-2">
			                					<span>SAVE CHANGES</span>
			            						<i class="icon-long-arrow-right"></i>
			                				</button>
			                			</form>
								    </div><!-- .End .tab-pane -->
								</div>
	                		</div><!-- End .col-lg-9 -->
	                	</div><!-- End .row -->
	                </div><!-- End .container -->
                </div><!-- End .dashboard -->
            </div><!-- End .page-content -->
        </main><!-- End .main -->

{{>allPageFooter}}

    </div><!-- End .page-wrapper -->
    <button id="scroll-top" title="Back to Top"><i class="icon-arrow-up"></i></button>

{{>mobileView}}

<script>
document.addEventListener("DOMContentLoaded", function () {
  const returnModal = document.getElementById("returnModal");
  const confirmReturnBtn = document.getElementById("confirmReturnBtn");
  const orderIdInput = document.getElementById("orderId");
  const productIdInput = document.getElementById("productId");

  // Function to open the return modal and set hidden inputs
  window.openReturnModal = function(orderId, productId, hasReturn) {
    if (hasReturn === 'true') {
      alert("This product has already been returned.");
      return;
    }

    orderIdInput.value = orderId;
    productIdInput.value = productId;

    // Show the modal
    $('#returnModal').modal('show');
  };

  confirmReturnBtn.addEventListener("click", async function () {
    const returnReason = document.getElementById("returnReason").value;

    if (!returnReason) {
      alert("Please select a reason for return.");
      return;
    }

    // Collect data from the form
    const data = {
      orderId: orderIdInput.value,
      productId: productIdInput.value,
      returnReason: returnReason
    };

    try {
      const response = await fetch("/return", {
        method: "POST",
        headers: {
          "Content-Type": "application/json"
        },
        body: JSON.stringify(data)
      });

      const result = await response.json();

      if (response.ok) {
        alert("Return processed successfully!");
        location.reload(); 
      } else {
        alert(result.message || "Failed to process return.");
      }
    } catch (error) {
      console.error("Error processing return:", error);
      alert("An error occurred. Please try again later.");
    }
  });
});

</script>

<script>
  function cancelOrder(orderId) {
    // Show confirmation dialog before cancelling
    Swal.fire({
      title: 'Are you sure?',
      text: "Do you want to cancel this order?",
      icon: 'warning',
      showCancelButton: true,
      confirmButtonColor: '#d33',
      cancelButtonColor: '#3085d6',
      confirmButtonText: 'Yes, cancel it!'
    }).then((result) => {
      if (result.isConfirmed) {
        // Send a Fetch request to cancel the order
        fetch('/cancelOrder', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({
            orderId: orderId
          })
        })
        .then(response => response.json()) // Parse JSON response
        .then(data => {
          if (data.success) {
            Swal.fire('Cancelled!', data.message, 'success')
              .then(() => {
                // Reload the page or update the UI to reflect the change
                window.location.reload();
              });
          } else {
            Swal.fire('Error!', data.message, 'error');
          }
        })
        .catch(error => {
          Swal.fire('Error!', 'Failed to cancel the order', 'error');
        });
      }
    });
  }
</script>

{{!-- current working ajax below --}}
{{!-- <script>
  function cancelOrder(orderId, productId) {
    const confirmation = confirm("Are you sure you want to cancel this order?");
    if (confirmation) {
      fetch(`/orders/cancel`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({
          orderId: orderId,
          productId: productId
        })
      })
      .then(response => response.json())
      .then(data => {
        if (data.success) {
          alert('Order has been cancelled successfully.');
          location.reload(); // Reload the page to show the updated status
        } else {
          alert(data.message);
        }
      })
      .catch(error => {
        console.error('Error:', error);
      });
    }
  }
</script> --}}



{{!-- controlr --}}
{{!-- <script>
  controller
  const orderHelper = require('../helpers/orderHelper');

const cancelOrder = async (req, res) => {
  try {
    const { orderId, productId } = req.body;
    
    // Call the helper function to handle the cancellation logic
    const result = await orderHelper.cancelOrder(orderId, productId);
    
    if (!result.success) {
      return res.status(result.status).json({ success: false, message: result.message });
    }

    return res.status(200).json({ success: true, message: result.message });
  } catch (error) {
    console.error('Cancel Order Error:', error);
    return res.status(500).json({ success: false, message: "Internal Server Error" });
  }
};

module.exports = {
  cancelOrder,
};

</script> --}}

{{!-- helpr --}}
{{!-- <script>
  helper
  const Order = require('../models/orderSchema');
const User = require('../models/userSchema');
const stripe = require('stripe')(process.env.STRIPE_SECRET_KEY);

const cancelOrder = async (orderId, productId) => {
  try {
    // Find the order by orderId and productId
    const order = await Order.findOne({ _id: orderId, 'items.product': productId });

    if (!order) {
      return { success: false, message: "Order not found", status: 404 };
    }

    // Check if the order can be canceled (only if Processing or Shipped)
    if (order.orderStatus !== 'Processing' && order.orderStatus !== 'Shipped') {
      return { success: false, message: "Order cannot be canceled", status: 400 };
    }

    // Find the specific product in the order
    const orderItem = order.items.find(item => item.product.toString() === productId);

    // Handle Stripe Payment Refund
    if (order.paymentType === 'Stripe Payment') {
      const refundAmount = orderItem.price * orderItem.quantity;

      try {
        // Process refund with Stripe
        await stripe.refunds.create({
          payment_intent: order.stripeIntentId,
          amount: Math.round(refundAmount * 100), // Stripe works in cents
        });

        // Update the user's wallet with the refund amount
        const user = await User.findById(order.user);
        user.wallet += refundAmount;
        await user.save();

        // Mark the refund as successful in the order
        orderItem.refund = true;
        orderItem.refundAmount = refundAmount;
      } catch (error) {
        return { success: false, message: "Failed to process the refund", status: 500 };
      }
    }

    // Update the order status to Cancelled and save
    order.orderStatus = 'Cancelled';
    await order.save();

    return { success: true, message: "Order canceled successfully", status: 200 };
  } catch (error) {
    console.error('Cancel Order Helper Error:', error);
    return { success: false, message: "Internal Server Error", status: 500 };
  }
};

module.exports = {
  cancelOrder,
};

</script> --}}

                <!-- Return button only -->
                {{!-- <div class="col-12 col-md-2 text-right">
                  <button class="btn btn-outline-primary-2 btn-sm" style="width: 80px; height: 30px; padding: 0; display: inline-flex; justify-content: center; align-items: center; border-radius: 4px;"
                    onclick="openReturnModal('{{../_id}}', '{{this.product._id}}', '{{this.return}}')">
                    Return
                  </button>
                </div> --}}

{{!-- old working order area --}}
{{!-- <script>
  
      <div class="order-list">
        {{#each orders}}
          <div class="order-item mb-3 p-3" style="border: 1px solid #ebebeb; border-radius: 8px; background-color: #f9f9f9; box-shadow: 0 2px 5px rgba(0, 0, 0, 0.05);">
            <div class="row align-items-center">
              {{#each this.items}}
                <!-- Product image and name -->
                <div class="col-12 col-md-3 mb-2 mb-md-0 d-flex align-items-center">
                  <img src="uploads/{{product.image.[0]}}" alt="{{this.product.name}}" style="max-width: 50px; height: 50px; border-radius: 5px; object-fit: cover; margin-right: 10px;">
                  <div>
                    <h5 style="font-size: 0.9em; color: #3a3838; font-weight: bold; margin-bottom: 0;">{{this.product.name}} <mark> × {{this.quantity}} </mark> <small>(qty)</small> </h5>
                    <p style="color: #4a4a4a; font-size: 0.8em; margin-bottom: 0;">₹{{this.price}}</p>
                  </div>
                </div>

                <!-- Order details -->
                <div class="col-12 col-md-7 mb-2 mb-md-0">
                  <div class="row">
                    <div class="col-6 col-md-4">
                      <p style="font-size: 0.8em; color: #666; margin-bottom: 0;"><strong>Purchased:</strong> {{date ../datePlaced "MMM Do, YYYY"}}</p>
                    </div>
                    <div class="col-6 col-md-4">
                      <p style="font-size: 0.8em; color: #666; margin-bottom: 0;"><strong>Delivery by:</strong> {{date ../deliveryExpectedDate "MMM Do, YYYY"}}</p>
                    </div>
                    <div class="col-6 col-md-4">
                      <p style="font-size: 0.8em; color: #666; margin-bottom: 0;"><strong>Status:</strong> {{../orderStatus}}</p>
                      <p style="font-size: 0.8em; color: #666; margin-bottom: 0;"><strong>Return Status:</strong> {{#if this.return}}Requested ({{this.return}}){{else}}Not Requested{{/if}}</p>
                    </div>
                  </div>
                </div>

                          <!-- Cancel or Return button -->
          <div class="col-12 col-md-2 text-right">
            {{#if (or (eq ../orderStatus "Processing") (eq ../orderStatus "Shipped"))}}
              <!-- Show 'Cancel' button if the order is still processing or shipped -->
              <button class="btn btn-outline-danger btn-sm" style="width: 80px; height: 30px; padding: 0; display: inline-flex; justify-content: center; align-items: center; border-radius: 4px;"
                onclick="cancelOrder('{{../_id}}', '{{this.product._id}}')">
                Cancel
              </button>
            {{else if (eq ../orderStatus "Delivered")}}
              <!-- If order is delivered -->
              {{#if this.return}}
                <!-- If a return is requested, show the current return status -->
                <button class="btn btn-outline-success btn-sm" style="width: 120px; height: 30px; padding: 0; display: inline-flex; justify-content: center; align-items: center; border-radius: 4px;" disabled>
                  {{#if (eq this.returnStatus "Approved")}}
                    Refund Completed
                  {{else}}
                    Refund {{this.returnStatus}}
                  {{/if}}
                </button>
              {{else}}
                <!-- If no return requested, show the 'Return' button -->
                <button class="btn btn-outline-primary-2 btn-sm" style="width: 80px; height: 30px; padding: 0; display: inline-flex; justify-content: center; align-items: center; border-radius: 4px;"
                  onclick="openReturnModal('{{../_id}}', '{{this.product._id}}', '{{this.return}}')">
                  Return
                </button>
              {{/if}}
            {{/if}}
          </div>

              {{/each}}
            </div>
          </div>
        {{/each}}
      </div>

</script> --}}