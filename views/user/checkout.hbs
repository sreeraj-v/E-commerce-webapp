
    <div class="page-wrapper">
{{>allPageHeader}}

<main class="main">
    <div class="page-header text-center" style="background-image: url('assets/images/page-header-bg.jpg')">
        <div class="container">
            <h1 class="page-title">Checkout<span>Shop</span></h1>
        </div>
    </div><!-- End .page-header -->

    <nav aria-label="breadcrumb" class="breadcrumb-nav">
        <div class="container">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="index.html">Home</a></li>
                <li class="breadcrumb-item"><a href="#">Shop</a></li>
                <li class="breadcrumb-item active" aria-current="page">Checkout</li>
            </ol>
        </div>
    </nav><!-- End .breadcrumb-nav -->

    <div class="page-content">
        <div class="checkout">
            <div class="container">
                <div class="row">
                    <div class="col-lg-7 ml-5">
                        <!-- Coupon Accordion -->
                        <div class="col-12 border rounded p-3 mb-2">
                        <h6 class="coupon-title">Have a coupon?</h6>
                            <div class="accordion" id="coupon-accordion">
                                <div class="card">
                                    <div class="card-header" id="headingCoupon">
                                        <h2 class="mb-0">
                                            <button class="btn btn-link btn-block text-left" type="button" data-toggle="collapse" data-target="#collapseCoupon" aria-expanded="true" aria-controls="collapseCoupon">
                                                Click here to select your coupon
                                            </button>
                                        </h2>
                                    </div>

                                    <div id="collapseCoupon" class="collapse show" aria-labelledby="headingCoupon" data-parent="#coupon-accordion">
                                        <div class="card-body">
                                            <!-- List of Coupons -->
                                            <div class="mb-3">
                                                {{#each coupons}}
                                                <div class="d-flex align-items-center p-2 border-bottom" style="cursor: pointer;" onclick="selectCoupon('{{this.code}}')">
                                                    <i class="fas fa-tag mr-2" style="font-size: 18px;"></i>
                                                    <div>
                                                        <strong>üè∑Ô∏è{{this.code}}</strong><br>
                                                        <small>{{this.description}}</small>
                                                    </div>
                                                </div>
                                                {{/each}}
                                            </div>
                                            <!-- Input field and Apply button -->
                                            <div class="form-group">
                                                <label for="selectedCouponCode">Selected Coupon Code</label>
                                                <div class="input-group">
                                                    <input type="text" id="selectedCouponCode" name="selectedCouponCode" class="form-control" readonly>
                                                    <div class="input-group-append" style="display: flex; height: 4.5rem; margin-left: 1rem; width: 15rem;">
                                                        <button type="button" class="btn btn-primary" id="applyCouponButton">Apply</button>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div><!-- End .accordion -->

                     <div class="col-12 border rounded p-3 mb-2">
                        <h2 class="checkout-title">Billing Details</h2><!-- End .checkout-title -->
                        <!-- Accordion for Address Selection -->
                        <div class="accordion" id="address-accordion">
                            <!-- Select Existing Address -->
                            <div class="card">
                                <div class="card-header" id="headingAddress">
                                    <h2 class="card-title">
                                        <a role="button" data-toggle="collapse" href="#collapseSelectAddress" aria-expanded="true" aria-controls="collapseSelectAddress">
                                            Select  Address
                                        </a>
                                    </h2>
                                </div><!-- End .card-header -->

                                <div id="collapseSelectAddress" class="collapse show" aria-labelledby="headingAddress" data-parent="#address-accordion">
                                    <div class="card-body">
                                        <div class="form-group">
                                            <select class="form-control" id="existing-address">
                                                <option>{{#if addresses.length}}Select an Address{{else}}No addresses found. Add a new one{{/if}}</option>
                                                {{#each addresses}}
                                                <option value="{{this._id}}">{{this.firstName}}, {{this.streetAddress}}, {{this.city}}, {{this.pincode}} ,{{this.phone}} ,{{this.email}}</option>
                                                {{/each}}
                                            </select>
                                        </div>
                                    </div><!-- End .card-body -->
                                </div><!-- End .collapse -->
                            </div><!-- End .card -->

                            <!-- Create New Address -->
                            <div class="card">
                                <div class="card-header" id="headingNewAddress">
                                    <h2 class="card-title">
                                        <a role="button" data-toggle="collapse" href="#collapseNewAddress" aria-expanded="false" aria-controls="collapseNewAddress">
                                            Create New Address
                                        </a>
                                    </h2>
                                </div><!-- End .card-header -->

                                <div id="collapseNewAddress" class="collapse" aria-labelledby="headingNewAddress" data-parent="#address-accordion">
                                    <div class="card-body">
                                        <form id="new-address-form" action="/addNewAddress" method="post">
                                            {{#if user}}
                                            <div class="row">
                                                <div class="col-sm-6">
                                                    <label>First Name *</label>
                                                    <input type="text" class="form-control" name="firstName" value="{{user.name}}" required>
                                                </div><!-- End .col-sm-6 -->
                                                <div class="col-sm-6">
                                                    <label>Last Name *</label>
                                                    <input type="text" class="form-control" name="lastName">
                                                </div><!-- End .col-sm-6 -->
                                            </div><!-- End .row -->

                                            <label>Street address *</label>
                                            <input type="text" class="form-control" name="streetAddress" placeholder="House number and Street name" required>

                                            <div class="row">
                                                <div class="col-sm-6">
                                                    <label>City *</label>
                                                    <input type="text" class="form-control" name="city" required>
                                                </div><!-- End .col-sm-6 -->

                                                <div class="col-sm-6">
                                                    <label>Country *</label>
                                                    <input type="text" class="form-control" name="country" required>
                                                </div><!-- End .col-sm-6 -->
                                            </div><!-- End .row -->

                                            <div class="row">
                                                <div class="col-sm-6">
                                                    <label>Postcode / ZIP *</label>
                                                    <input type="text" class="form-control" name="pincode" required>
                                                </div><!-- End .col-sm-6 -->
                                                <div class="col-sm-6">
                                                    <label>Phone *</label>
                                                    <input type="tel" class="form-control" name="phone" value="{{user.phone}}" required>
                                                </div><!-- End .col-sm-6 -->
                                            </div><!-- End .row -->

                                            <label>Email address *</label>
                                            <input type="email" class="form-control" name="email" value="{{user.email}}" required>

                                            <!-- Submit Button -->
                                            <button type="submit" class="btn btn-outline-primary-2 btn-order btn-block mt-3">
                                                Add Address
                                            </button>
                                            {{/if}}
                                        </form>
                                    </div><!-- End .card-body -->
                                </div><!-- End .collapse -->
                            </div><!-- End .card -->
                        </div><!-- End .accordion -->
                      </div>
                    </div><!-- End .col-lg-7 -->

                    <aside class="col-lg-4 ml-5 mr-2">
                        <div class="summary">
                            <h3 class="summary-title">Your Order</h3><!-- End .summary-title -->

                            <table class="table table-summary">
                                <thead>
                                    <tr>
                                        <th>Product</th>
                                        <th>Total</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    {{#each userCart.items}}
                                    <tr>
                                        <td><a href="#">{{this.productId.name}} </a></td>
                                        <td>{{this.price}} </td>
                                    </tr>
                                    {{/each}}
                                    <tr>
                                        <td>Shipping:</td>
                                        <td>Free shipping</td>
                                    </tr>
                                    <tr class="summary-total">
                                        <td>Total:</td>
                                        <td id="orderTotal">{{totalCartValue}} </td>
                                    </tr><!-- End .summary-total -->
                                </tbody>
                            </table><!-- End .table table-summary -->


<div class="accordion-summary" id="accordion-payment">
    <div class="card mb-1" >
        <div class="card-header">
            <h2 class="card-title">
                <input type="radio" name="paymentMethod" value="Cash on Delivery" id="cashOnDelivery" checked>
                <label for="cashOnDelivery"><strong>Cash on Delivery</strong></label>
            </h2>
        </div><!-- End .card-header -->
    </div><!-- End .card -->

    <div class="card">
        <div class="card-header">
            <h2 class="card-title">
                <input type="radio" name="paymentMethod" value="Stripe Payment" id="stripePayment">
                <label for="stripePayment"><strong>Stripe Payment</strong></label>
            </h2>
        </div><!-- End .card-header -->
    </div><!-- End .card -->
</div><!-- End .accordion -->


                            <button type="submit" class="btn btn-outline-primary-2 btn-order btn-block" id="place-order-btn">
                                <span class="btn-text">Place Order</span>
                                <span class="btn-hover-text">Proceed to Checkout</span>
                            </button>
                        </div><!-- End .summary -->
                    </aside><!-- End .col-lg-5 -->
                </div><!-- End .row -->
            </div><!-- End .container -->
        </div><!-- End .checkout -->
    </div><!-- End .page-content -->
</main><!-- End .main -->

{{!-- below for stripe --}}
{{!-- <div id="card-element" style="display: none;">
    <!-- Stripe's card element will be inserted here -->
</div>

<div id="card-errors" role="alert"></div> --}}
{{!-- above for stripe --}}



{{>allPageFooter}}

    </div><!-- End .page-wrapper -->
    <button id="scroll-top" title="Back to Top"><i class="icon-arrow-up"></i></button>

{{>mobileView}}

{{!-- below for stripe --}}



<script src="https://js.stripe.com/v3/"></script>

{{!-- <script>
    const stripe = Stripe('pk_test_51Ptt5WCsHv5xvAVbuFRE7PPgkMe9Qh3iUcmALvTsfNyIirpmoAmzmTZ8xdCUo4iGGt2xDx9pHssGSazWIDBqKnrf00HR3DExzR'); // Replace with your actual public key
    const elements = stripe.elements();
    const cardElement = elements.create('card');
    const placeOrderBtn = document.getElementById('place-order-btn');
    const cardErrors = document.getElementById('card-errors');
    
    const cardElementContainer = document.getElementById('card-element');

    placeOrderBtn.addEventListener('click', async function(event) {
        event.preventDefault();  // Prevent form submission

        const selectedAddressId = document.getElementById('existing-address').value;
        const totalCheckOutValue = document.getElementById('orderTotal').textContent;
        const paymentMethod = document.querySelector('input[name="paymentMethod"]:checked');
        
        if (!paymentMethod) {
            alert('Please select a payment method.');
            return;
        }

        const paymentType = paymentMethod.value;

        if (selectedAddressId === 'Select an Address') {
            alert('Please select an address before placing the order.');
            return;
        }

        const requestBody = { 
            addressId: selectedAddressId, 
            paymentType: paymentType,
        };

        if (totalCheckOutValue) {
            requestBody.totalCheckOutValue = totalCheckOutValue;
        }

        // Show the card input only if Stripe Payment is selected
        if (paymentType === 'Stripe Payment') {
            cardElement.mount('#card-element');
            cardElementContainer.style.display = 'block';
        } else {
            cardElementContainer.style.display = 'none';
        }

        // Trigger backend to create Stripe payment intent
        const response = await fetch('/create-payment-intent', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(requestBody)
        });

        const data = await response.json();
        window.open(data.url,"_blank")
        
        if (!response.ok) {
            alert(data.message || 'Failed to create payment intent.');
            return;
        }

        if (paymentType === 'Stripe Payment') {
            const { clientSecret } = data;

            // Confirm the payment using Stripe.js and card details
            const { error, paymentIntent } = await stripe.confirmCardPayment(clientSecret, {
                payment_method: {
                    card: cardElement,
                    billing_details: {
                        // Add billing details if necessary
                    },
                }
            });

            if (error) {
                cardErrors.textContent = `Payment failed: ${error.message}`;
            } else if (paymentIntent.status === 'succeeded') {
                alert('Payment successful!');

                // Now proceed with form submission or cart clearance
                await fetch('/complete-order', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ 
                        paymentIntentId: paymentIntent.id,
                        addressId: selectedAddressId,
                        paymentType: paymentType
                    })
                });

                window.location.href = '/order-success';
            } else {
                cardErrors.textContent = 'Payment was not successful. Please try again.';
            }
        } else {
            alert('Order placed successfully with Cash on Delivery!');
            
            // Handle order completion for Cash on Delivery
            await fetch('/complete-order', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ 
                    addressId: selectedAddressId,
                    paymentType: paymentType
                })
            });

            window.location.href = '/order-success';
        }
    });
</script> --}}

<script>
    const stripe = Stripe('pk_test_51Ptt5WCsHv5xvAVbuFRE7PPgkMe9Qh3iUcmALvTsfNyIirpmoAmzmTZ8xdCUo4iGGt2xDx9pHssGSazWIDBqKnrf00HR3DExzR'); // Replace with your actual public key
    const placeOrderBtn = document.getElementById('place-order-btn');

    placeOrderBtn.addEventListener('click', async function(event) {
        event.preventDefault();  // Prevent form submission

        const selectedAddressId = document.getElementById('existing-address').value;
        const totalCheckOutValue = document.getElementById('orderTotal').textContent;
        const paymentMethod = document.querySelector('input[name="paymentMethod"]:checked');
        
        if (!paymentMethod) {
            alert('Please select a payment method.');
            return;
        }

        const paymentType = paymentMethod.value;

        if (selectedAddressId === 'Select an Address') {
            alert('Please select an address before placing the order.');
            return;
        }

        const requestBody = { 
            addressId: selectedAddressId, 
            paymentType: paymentType,
            totalCheckOutValue: totalCheckOutValue
        };

        const response = await fetch('/create-payment-intent', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(requestBody)
        });

        const data = await response.json();

        if (paymentType === 'Stripe Payment') {
            if (data.url) {
                window.location.href = data.url;  // Redirect to Stripe hosted checkout page
            } else {
                alert('Failed to create Stripe session.');
            }
        } else {
            // Handle order completion for Cash on Delivery
            alert('Order placed successfully with Cash on Delivery!');
            window.location.href = '/order-success';
        }
    });
</script>

{{!-- above for stripe --}}

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const form = document.getElementById("new-address-form");
            if (form) {
                form.addEventListener("submit", function (e) {
                    e.preventDefault();

                    const formData = new FormData(form);
                    const data = {};
                    formData.forEach((value, key) => {
                        data[key] = value.trim(); // Trim values here
                    });

                    fetch("/addNewAddress", {
                        method: "POST",
                        headers: {
                            "Content-Type": "application/json"
                        },
                        body: JSON.stringify(data)
                    })
                        .then(response => response.json())
                        .then(data => {
                            if (data.success) {
                                Swal.fire({
                                    icon: 'success',
                                    title: 'Success',
                                    text: data.message
                                }).then(() => {
                                    location.reload(); // Reload to update the address list
                                })
                            } else {
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Error',
                                    text: data.message
                                })
                            }
                        })
                        .catch(error => {
                            console.error("Error:", error);
                            Swal.fire({
                                icon: 'error',
                                title: 'Error',
                                text: 'An unexpected error occurred'
                            });
                        });
                });
            }
        });

    </script>

<script>

    function selectCoupon(code) {
        document.getElementById('selectedCouponCode').value = code;
    }

    document.getElementById('applyCouponButton').addEventListener('click', function() {
        const couponCode = document.getElementById('selectedCouponCode').value;
        const cartTotal = {{totalCartValue}}; // Pass totalCartValue from the controller

        fetch('/applyCoupon', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ couponCode, cartTotal })
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                // Update the order total in the UI without reloading
                document.getElementById('orderTotal').textContent = `${data.newTotal}`;

                // Show success alert
                Swal.fire({
                    title: 'Coupon Applied!',
                    text: `Your new total is ‚Çπ${data.newTotal}`,
                    icon: 'success',
                    confirmButtonText: 'Ok'
                });
            } else {
                // Show error alert if coupon application failed
                Swal.fire({
                    title: 'Coupon Not Applied',
                    text: data.message,
                    icon: 'error',
                    confirmButtonText: 'Try Again'
                });
            }
        })
        .catch(error => {
            console.error('Error applying coupon:', error);
            Swal.fire({
                title: 'Error',
                text: 'An error occurred while applying the coupon. Please try again later.',
                icon: 'error',
                confirmButtonText: 'Ok'
            });
        });
    });
</script>

    {{!-- <script src="assets/js/main.js"></script> --}}

{{!-- value in the option tag for esisting address area venele ith - value="{{this._id}} use aaka. --}}