<style>
  /* Styles for the chat window */
  #chat-messages {
    display: flex;
    flex-direction: column;
    gap: 10px;
    padding: 10px;
    height: 230px;
    overflow-y: auto;
  }

  /* Style for user's message */
  .user-message {
    background-color: #d1ecf1; /* Light blue background */
    color: #004085;
    align-self: flex-end; /* Align to the right */
    padding: 10px;
    border-radius: 15px;
    max-width: 70%;
    word-wrap: break-word;
  }

  /* Style for bot's message */
  .bot-message {
    background-color: #f8f9fa; /* Light grey background */
    color: #343a40;
    align-self: flex-start; /* Align to the left */
    padding: 10px;
    border-radius: 15px;
    max-width: 70%;
    word-wrap: break-word;
  }

  /* Custom scrollbar */
  #chat-messages::-webkit-scrollbar {
    width: 6px;
  }

  #chat-messages::-webkit-scrollbar-track {
    background: #f1f1f1;
  }

  #chat-messages::-webkit-scrollbar-thumb {
    background: #888;
    border-radius: 10px;
  }

  #chat-messages::-webkit-scrollbar-thumb:hover {
    background: #555;
  }
</style>

<div style="position: fixed; bottom: 30px; right: 30px; z-index: 9999;">
  <div id="chat-tooltip" style="position: absolute; bottom: 50px; right: 0; background-color: #333; color: white; padding: 5px 10px; border-radius: 5px; display: none; white-space: nowrap;">
    Ask your doubts?
  </div>
  <button id="chat-button" style="width: 50px; height: 50px; border-radius: 50%; background-color: #d63031; color: white; border: none; cursor: pointer; box-shadow: 0 4px 8px rgba(0,0,0,0.1); display: flex; align-items: center; justify-content: center; overflow: hidden;">
    <div style="width: 36px; height: 36px; background-color: rgba(255,255,255,0.2); border-radius: 50%; display: flex; align-items: center; justify-content: center;">
      <i class="fas fa-robot" style="font-size: 20px;"></i>
    </div>
  </button>
  
  <div id="chat-window" style="display: none; position: fixed; bottom: 85px; right: 30px; width: 280px; height: 330px; background-color: white; border-radius: 10px; box-shadow: 0 0 20px rgba(0,0,0,0.1); overflow: hidden;">
    <div style="background-color: #000; color: white; padding: 2px 15px; display: flex; justify-content: space-between; align-items: center;">
      <h5 style="margin: 0;">Chat with us</h5>
      <button id="close-chat" style="background: none; border: none; color: white; font-size: 18px; cursor: pointer;">Ã—</button>
    </div>
    <div id="chat-messages" style="height: 230px; overflow-y: auto; padding: 10px;">
      <!-- Chat messages will appear here -->
    </div>
    <div style="display: flex; padding: 10px 15px 15px; border-top: 1px solid #eee;">
      <input id="chat-input" type="text" placeholder="Ask your questions?" style="flex-grow: 1; padding: 6px; border: 1px solid #ddd; border-radius: 3px; background-color: #f5f5f5; color: #333; margin-right: 5px;">
      <button id="send-button" style="background-color: #000; color: white; border: none; padding: 8px 12px; border-radius: 3px; cursor: pointer;">Send</button>
    </div>
  </div>
</div> 

<script src="/socket.io/socket.io.js"></script> <!-- Load Socket.IO -->

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const chatButton = document.getElementById('chat-button');
    const chatWindow = document.getElementById('chat-window');
    const closeChat = document.getElementById('close-chat');
    const chatTooltip = document.getElementById('chat-tooltip');
    const chatMessages = document.getElementById("chat-messages");

    // Toggle chat tooltip on hover
    chatButton.addEventListener('mouseover', function() {
      chatTooltip.style.display = 'block';
    });

    chatButton.addEventListener('mouseout', function() {
      chatTooltip.style.display = 'none';
    });

    // Toggle chat window on click
    chatButton.addEventListener('click', function() {
      chatWindow.style.display = chatWindow.style.display === 'none' ? 'block' : 'none';
    });

    // Close chat window on clicking close button
    closeChat.addEventListener('click', function() {
      chatWindow.style.display = 'none';
    });

    // Connect to the server using Socket.IO
    const socket = io();

    // Function to scroll to the bottom
    function scrollToBottom() {
      chatMessages.scrollTop = chatMessages.scrollHeight;
    }

    // Function to render chat history
    function renderChatHistory(chatHistory) {
      chatHistory.forEach(chat => {
        const userMessageElement = document.createElement("div");
        userMessageElement.classList.add("user-message");
        userMessageElement.textContent = chat.question;
        chatMessages.appendChild(userMessageElement);

        const botMessageElement = document.createElement("div");
        botMessageElement.classList.add("bot-message");
        botMessageElement.textContent = chat.answer;
        chatMessages.appendChild(botMessageElement);
      });
      scrollToBottom();
    }

    // Listen for chat history event from the server
    socket.on("chatHistory", function(chatHistory) {
      if (chatHistory && chatHistory.length > 0) {
        renderChatHistory(chatHistory);
      }
    });

    // Handle sending a message when the user clicks the "Send" button
    document.getElementById("send-button").addEventListener("click", function() {
      const userInput = document.getElementById("chat-input").value;

      if (userInput.trim() === "") {
        return; // Prevent sending empty messages
      }

      // Emit the user's message to the server
      socket.emit("userMessage", userInput);

      // Clear the input field
      document.getElementById("chat-input").value = "";

      // Display the user's message in the chat window
      const userMessageElement = document.createElement("div");
      userMessageElement.classList.add("user-message"); // Add the user message class
      userMessageElement.textContent = userInput;
      chatMessages.appendChild(userMessageElement);

      // Scroll to the bottom of the chat
      scrollToBottom();
    });

    // Listen for the bot's response from the server
    socket.on("botResponse", function(message) {
      const botMessageElement = document.createElement("div");
      botMessageElement.classList.add("bot-message"); // Add the bot message class
      botMessageElement.textContent = message;
      chatMessages.appendChild(botMessageElement);

      // Scroll to the bottom of the chat
      scrollToBottom();
    });
  });
</script>
